generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                        String                     @id @default(uuid())
  email                     String                     @unique
  senha                     String
  nome                      String
  perfil                    TipoPerfil
  ativo                     Boolean                    @default(true)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  auditLogs                 AuditLog[]
  historicoStatusMotoristas HistoricoStatusMotorista[]
  motorista                 Motorista?

  @@map("usuarios")
}

model Motorista {
  id                        String                     @id @default(uuid())
  transporterId             String?                    @unique @db.VarChar(14)
  nomeCompleto              String                     @db.VarChar(50)
  celular                   String                     @db.VarChar(11)
  cep                       String?
  logradouro                String?
  numero                    String?
  complemento               String?
  cidade                    String                     @db.VarChar(30)
  uf                        String                     @db.VarChar(2)
  bairro                    String?                    @db.VarChar(50)
  cpf                       String                     @unique @db.VarChar(11)
  email                     String                     @db.VarChar(50)
  chavePix                  String?                    @db.VarChar(60)
  tipoVeiculo               TipoVeiculo
  propriedadeVeiculo        TipoPropriedadeVeiculo     @default(PROPRIO)
  status                    StatusMotorista            @default(ATIVO)
  pontuacao                 Float                      @default(0)
  anoFabricacaoVeiculo      Int?
  placaVeiculo              String?                    @db.VarChar(7)
  primeiraRotaNursery       DateTime?
  iniciouNurseryL1          DateTime?
  iniciouNurseryL2          DateTime?
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  usuarioId                 String                     @unique
  nivel                     String?                    @default("INICIANTE") @db.VarChar(45)
  alertas                   Alerta[]
  contratos                 ContratoMotorista[]
  disponibilidades          Disponibilidade[]
  documentos                DocumentoMotorista?
  faturamentos              Faturamento[]
  historicoDisponibilidades HistoricoDisponibilidade[]
  historicoStatus           HistoricoStatusMotorista[]
  usuario                   Usuario                    @relation(fields: [usuarioId], references: [id])
  ofertas                   OfertaRota[]
  rotas                     Rota[]

  @@index([status])
  @@index([tipoVeiculo])
  @@index([cpf])
  @@map("motoristas")
}

model DocumentoMotorista {
  id                    String    @id @default(uuid())
  motoristaId           String    @unique
  numeroCNH             String?   @db.VarChar(11)
  validadeCNH           DateTime?
  anoLicenciamento      Int?
  dataVerificacaoBRK    DateTime?
  proximaVerificacaoBRK DateTime?
  statusBRK             Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  motorista             Motorista @relation(fields: [motoristaId], references: [id])

  @@index([validadeCNH])
  @@index([proximaVerificacaoBRK])
  @@map("documentos_motoristas")
}

model ContratoMotorista {
  id                  String    @id @default(uuid())
  motoristaId         String
  numeroContrato      String    @unique @db.VarChar(20)
  dataAssinatura      DateTime
  dataVigenciaInicial DateTime
  ativo               Boolean   @default(true)
  cnpjMEI             String?   @db.VarChar(14)
  razaoSocialMEI      String?   @db.VarChar(100)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  motorista           Motorista @relation(fields: [motoristaId], references: [id])

  @@index([motoristaId])
  @@index([ativo])
  @@map("contratos_motoristas")
}

model HistoricoStatusMotorista {
  id             String          @id @default(uuid())
  motoristaId    String
  statusAnterior StatusMotorista
  statusNovo     StatusMotorista
  motivo         String?         @db.Text
  alteradoPor    String
  createdAt      DateTime        @default(now())
  usuario        Usuario         @relation(fields: [alteradoPor], references: [id])
  motorista      Motorista       @relation(fields: [motoristaId], references: [id], onDelete: Cascade)

  @@index([motoristaId, createdAt])
  @@index([alteradoPor], map: "historico_status_motoristas_alteradoPor_fkey")
  @@map("historico_status_motoristas")
}

model Disponibilidade {
  id          String                 @id @default(uuid())
  motoristaId String
  data        DateTime               @db.Date
  ciclo       disponibilidades_ciclo
  disponivel  Boolean                @default(true)
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  motorista   Motorista              @relation(fields: [motoristaId], references: [id])

  @@unique([motoristaId, data, ciclo])
  @@index([motoristaId, data])
  @@map("disponibilidades")
}

model HistoricoDisponibilidade {
  id               String                           @id @default(uuid())
  motoristaId      String
  data             DateTime                         @db.Date
  ciclo            historico_disponibilidades_ciclo
  disponivelAntigo Boolean
  disponivelNovo   Boolean
  alteradoPor      String?
  motivoAlteracao  String?                          @db.Text
  createdAt        DateTime                         @default(now())
  motorista        Motorista                        @relation(fields: [motoristaId], references: [id], onDelete: Cascade)

  @@index([motoristaId, data])
  @@index([createdAt])
  @@map("historico_disponibilidades")
}

model Local {
  id        String   @id @default(uuid())
  codigo    String   @unique @db.VarChar(10)
  nome      String   @db.VarChar(100)
  endereco  String   @db.Text
  latitude  Decimal? @db.Decimal(10, 8)
  longitude Decimal? @db.Decimal(11, 8)
  cidade    String   @db.VarChar(50)
  bairro    String?  @db.VarChar(30)
  uf        String   @db.VarChar(2)
  ativo     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cep       String?  @db.VarChar(8)
  rotas     Rota[]

  @@map("locais")
}

model TabelaPreco {
  id                   String                  @id @default(uuid())
  tipoVeiculo          TipoVeiculo?
  propriedadeVeiculo   TipoPropriedadeVeiculo?
  tipoServico          TipoServico?
  propriedade          TipoPropriedade?
  versao               Int                     @default(1)
  estacao              String                  @default("DBS5") @db.VarChar(10)
  valorHora            Decimal                 @db.Decimal(10, 2)
  valorCancelamento    Decimal                 @db.Decimal(10, 2)
  valorKm              Decimal                 @db.Decimal(10, 2)
  bonusWeekend         Decimal                 @default(0.00) @db.Decimal(10, 2)
  valorHoraDSP         Decimal?                @db.Decimal(10, 2)
  valorCancelamentoDSP Decimal?                @db.Decimal(10, 2)
  bonusWeekendDSP      Decimal?                @db.Decimal(10, 2)
  valorPorPacote       Decimal?                @db.Decimal(10, 2)
  dataInicioVigencia   DateTime
  dataFimVigencia      DateTime?
  ativo                Boolean                 @default(true)
  createdAt            DateTime                @default(now())
  updatedAt            DateTime                @updatedAt
  criadoPor            String?
  rotas                Rota[]

  @@index([tipoVeiculo, propriedadeVeiculo, ativo])
  @@index([tipoServico, propriedade, ativo])
  @@index([estacao, ativo, dataInicioVigencia])
  @@map("tabelas_precos")
}

model Rota {
  id                    String          @id @default(uuid())
  dataRota              DateTime        @db.Date
  horaInicio            DateTime        @db.Time(0)
  horaFim               DateTime?       @db.Time(0)
  tipoVeiculo           TipoVeiculo
  tipoRota              TipoRota        @default(ENTREGA)
  cicloRota             rotas_cicloRota @default(CICLO_1)
  tamanhoHoras          Decimal         @db.Decimal(4, 2)
  veiculoTransportadora Boolean         @default(false)
  valorHora             Decimal         @db.Decimal(10, 2)
  bonusPorHora          Decimal         @default(0.00) @db.Decimal(10, 2)
  bonusFixo             Decimal         @default(0.00) @db.Decimal(10, 2)
  valorProjetado        Decimal         @db.Decimal(10, 2)
  kmProjetado           Int?            @default(50)
  tabelaPrecosId        String?
  valorHoraSnapshot     Decimal?        @db.Decimal(10, 2)
  valorKmSnapshot       Decimal?        @db.Decimal(10, 2)
  valorCancelSnapshot   Decimal?        @db.Decimal(10, 2)
  bonusWeekendSnapshot  Decimal?        @db.Decimal(10, 2)
  latitudeOrigem        Decimal?        @db.Decimal(10, 8)
  longitudeOrigem       Decimal?        @db.Decimal(11, 8)
  codigoRota            String?         @unique
  qtdePacotes           Int?
  qtdeLocais            Int?
  qtdeParadas           Int?
  horaInicioReal        DateTime?
  horaFimReal           DateTime?
  kmReal                Decimal?        @db.Decimal(10, 2)
  valorKm               Decimal         @default(0.64) @db.Decimal(10, 2)
  valorBonusKm          Decimal?        @db.Decimal(10, 2)
  valorTotalRota        Decimal         @db.Decimal(10, 2)
  dataValidacao         DateTime?
  validadoPor           String?
  status                StatusRota      @default(DISPONIVEL)
  localId               String
  motivoCancelamento    String?         @db.Text
  dataCancelamento      DateTime?
  valorCancelamento     Decimal?        @db.Decimal(10, 2)
  motoristaId           String?
  criadoPor             String
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  ofertas               OfertaRota[]
  local                 Local           @relation(fields: [localId], references: [id])
  motorista             Motorista?      @relation(fields: [motoristaId], references: [id])
  tabelaPrecos          TabelaPreco?    @relation(fields: [tabelaPrecosId], references: [id])

  @@index([dataRota, status])
  @@index([status])
  @@index([tipoVeiculo])
  @@index([codigoRota])
  @@index([tabelaPrecosId])
  @@index([localId], map: "rotas_localId_fkey")
  @@index([motoristaId], map: "rotas_motoristaId_fkey")
  @@map("rotas")
}

model OfertaRota {
  id                  String       @id @default(uuid())
  rotaId              String
  motoristaId         String
  status              StatusOferta @default(PENDENTE)
  dataEnvio           DateTime     @default(now())
  dataVisualizacao    DateTime?
  dataResposta        DateTime?
  ipResposta          String?      @db.VarChar(45)
  dispositivoResposta String?      @db.VarChar(100)
  latitudeResposta    Decimal?     @db.Decimal(10, 8)
  longitudeResposta   Decimal?     @db.Decimal(11, 8)
  adicionouAgenda     Boolean      @default(false)
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  motorista           Motorista    @relation(fields: [motoristaId], references: [id])
  rota                Rota         @relation(fields: [rotaId], references: [id])

  @@index([motoristaId, status])
  @@index([rotaId])
  @@map("ofertas_rotas")
}

model Faturamento {
  id                    String    @id @default(uuid())
  motoristaId           String
  quinzena              Int
  mes                   Int
  ano                   Int
  valorRotas            Decimal   @default(0.00) @db.Decimal(10, 2)
  valorBonus            Decimal   @default(0.00) @db.Decimal(10, 2)
  valorAjudaCombustivel Decimal   @default(0.00) @db.Decimal(10, 2)
  valorCancelamentos    Decimal   @default(0.00) @db.Decimal(10, 2)
  valorTotal            Decimal   @default(0.00) @db.Decimal(10, 2)
  pago                  Boolean   @default(false)
  dataPagamento         DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  motorista             Motorista @relation(fields: [motoristaId], references: [id])

  @@unique([motoristaId, quinzena, mes, ano])
  @@index([motoristaId])
  @@map("faturamentos")
}

model MetricaEntrega {
  id                  String    @id @default(uuid())
  rotaId              String
  motoristaId         String
  data                DateTime  @db.Date
  totalPacotes        Int
  pacotesEntregues    Int
  pacotesRetornados   Int
  pacotesPNOV         Int
  pacotesDNR          Int
  taxaDRC             Decimal   @db.Decimal(5, 2)
  horarioCarregamento DateTime  @db.Time(0)
  horarioChegada      DateTime?
  atrasouCarregamento Boolean   @default(false)
  minutosAtraso       Int?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  @@index([data])
  @@index([motoristaId])
  @@map("metricas_entregas")
}

model AuditLog {
  id          String   @id @default(uuid())
  usuarioId   String
  acao        String   @db.VarChar(100)
  entidade    String   @db.VarChar(50)
  entidadeId  String?
  descricao   String?  @db.Text
  ip          String   @db.VarChar(45)
  dispositivo String   @db.VarChar(500)
  latitude    Decimal? @db.Decimal(10, 8)
  longitude   Decimal? @db.Decimal(11, 8)
  createdAt   DateTime @default(now())
  usuario     Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId, createdAt])
  @@index([entidade, entidadeId])
  @@map("audit_logs")
}

model Alerta {
  id            String     @id @default(uuid())
  tipo          String     @db.VarChar(50)
  motoristaId   String?
  titulo        String     @db.VarChar(100)
  descricao     String     @db.Text
  severidade    String     @db.VarChar(20)
  resolvido     Boolean    @default(false)
  dataResolucao DateTime?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  motorista     Motorista? @relation(fields: [motoristaId], references: [id])

  @@index([motoristaId, resolvido])
  @@index([tipo, resolvido])
  @@map("alertas")
}

enum TipoVeiculo {
  MOTOCICLETA
  CARRO_PASSEIO
  CARGO_VAN
  LARGE_VAN
}

enum TipoPerfil {
  DESPACHANTE_PLANEJADOR
  MOTORISTA
  ADMINISTRADOR
}

enum StatusMotorista {
  ATIVO
  INATIVO
  SUSPENSO
  ONBOARDING
  EXCLUIDO
}

enum TipoRota {
  ENTREGA
  EXTRA
  CUBOUT
  RESGATE
  NURSERY_LEVEL_1
  NURSERY_LEVEL_2
}

enum StatusRota {
  DISPONIVEL
  OFERTADA
  ACEITA
  RECUSADA
  CANCELADA
  CONFIRMADA
  EM_ANDAMENTO
  CONCLUIDA
  VALIDADA
}

enum StatusOferta {
  PENDENTE
  ACEITA
  RECUSADA
  EXPIRADA
}

enum TipoPropriedadeVeiculo {
  PROPRIO
  TRANSPORTADORA
}

enum TipoServico {
  BIKE
  SMALL_VAN
  LARGE_VAN
  HELPER
  PASSENGER

  @@map("tipo_servico")
}

enum TipoPropriedade {
  PROPRIO
  TRANSPORTADORA

  @@map("tipo_propriedade")
}

enum disponibilidades_ciclo {
  CICLO_1
  CICLO_2
  SAME_DAY
}

enum historico_disponibilidades_ciclo {
  CICLO_1
  CICLO_2
  SAME_DAY
}

enum rotas_cicloRota {
  CICLO_1
  CICLO_2
  SAME_DAY
}
