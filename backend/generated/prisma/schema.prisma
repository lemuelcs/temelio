generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ========== ENUMS ==========

enum StatusMotorista {
  ATIVO
  INATIVO
  SUSPENSO
  ONBOARDING
  EXCLUIDO
}

enum TipoVeiculo {
  MOTOCICLETA
  CARRO_PASSEIO
  CARGO_VAN
  LARGE_VAN
}

enum PropriedadeVeiculo {
  PROPRIO
  TRANSPORTADORA
}

enum TipoPerfil {
  DESPACHANTE_PLANEJADOR
  MOTORISTA
  ADMINISTRADOR
}

enum StatusRota {
  DISPONIVEL
  OFERTADA
  ACEITA
  RECUSADA
  CANCELADA
  CONFIRMADA
  EM_ANDAMENTO
  CONCLUIDA
  VALIDADA
}

enum TipoRota {
  ENTREGA
  EXTRA
  CUBOUT
  RESGATE
  NURSERY_LEVEL_1
  NURSERY_LEVEL_2
}

enum CicloRota {
  CICLO_1
  CICLO_2
  SAME_DAY
}

enum StatusOferta {
  PENDENTE
  ACEITA
  RECUSADA
  EXPIRADA
}

enum StatusTracking {
  AGUARDANDO
  A_CAMINHO
  NO_LOCAL
  ROTA_INICIADA
  ROTA_CONCLUIDA
}

enum TipoServico {
  BIKE
  CARGO_VAN
  LARGE_VAN
  HELPER
  PASSENGER
}

enum TipoPropriedade {
  PROPRIO
  TRANSPORTADORA
}

// ========== MODELS ==========

model Usuario {
  id                        String                      @id @default(cuid())
  email                     String                      @unique
  senha                     String
  nome                      String
  perfil                    TipoPerfil
  ativo                     Boolean                     @default(true)
  deveAlterarSenha          Boolean                     @default(false)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  
  // Relações
  auditLogs                 AuditLog[]
  motorista                 Motorista?
  historicoStatusMotoristas HistoricoStatusMotorista[]

  @@map("usuarios")
}

model Motorista {
  id                          String              @id @default(cuid())
  transporterId               String?             @unique @db.VarChar(14)
  nomeCompleto                String              @db.VarChar(50)
  celular                     String              @db.VarChar(11)
  cep                         String?
  logradouro                  String?
  numero                      String?
  complemento                 String?
  cidade                      String              @db.VarChar(30)
  uf                          String              @db.VarChar(2)
  bairro                      String?             @db.VarChar(50)
  cpf                         String              @unique @db.VarChar(11)
  dataNascimento              DateTime?
  email                       String              @db.VarChar(50)
  chavePix                    String?             @db.VarChar(60)
  tipoVeiculo                 TipoVeiculo
  propriedadeVeiculo          PropriedadeVeiculo  @default(PROPRIO)
  status                      StatusMotorista     @default(ATIVO)
  pontuacao                   Float               @default(0)
  anoFabricacaoVeiculo        Int?
  placaVeiculo                String?             @db.VarChar(7)
  primeiraRotaNursery         DateTime?
  iniciouNurseryL1            DateTime?
  iniciouNurseryL2            DateTime?
  nivel                       String?             @default("INICIANTE") @db.VarChar(45)
  usuarioId                   String              @unique
  createdAt                   DateTime            @default(now())
  updatedAt                   DateTime            @updatedAt
  
  // Relações
  usuario                     Usuario             @relation(fields: [usuarioId], references: [id])
  alertas                     Alerta[]
  contratos                   ContratoMotorista[]
  disponibilidades            Disponibilidade[]
  documento                   DocumentoMotorista?
  faturamentos                Faturamento[]
  historicoDisponibilidades   HistoricoDisponibilidade[]
  historicoStatus             HistoricoStatusMotorista[]
  ofertasRotas                OfertaRota[]
  rotas                       Rota[]
  historicosTrackingRotas     HistoricoTrackingRota[]
  metricasEntregas            MetricaEntrega[]

  @@index([cpf])
  @@index([status])
  @@index([tipoVeiculo])
  @@map("motoristas")
}

model DocumentoMotorista {
  id                    String      @id @default(cuid())
  motoristaId           String      @unique
  numeroCNH             String?     @db.VarChar(11)
  validadeCNH           DateTime?
  anoLicenciamento      Int?
  dataVerificacaoBRK    DateTime?
  proximaVerificacaoBRK DateTime?
  statusBRK             Boolean     @default(false)
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  
  motorista             Motorista   @relation(fields: [motoristaId], references: [id])

  @@index([proximaVerificacaoBRK])
  @@index([validadeCNH])
  @@map("documentos_motoristas")
}

model ContratoMotorista {
  id                  String      @id @default(cuid())
  motoristaId         String
  numeroContrato      String      @unique @db.VarChar(20)
  dataAssinatura      DateTime
  dataVigenciaInicial DateTime
  ativo               Boolean     @default(true)
  cnpjMEI             String?     @db.VarChar(14)
  razaoSocialMEI      String?     @db.VarChar(100)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  
  motorista           Motorista   @relation(fields: [motoristaId], references: [id])

  @@index([ativo])
  @@index([motoristaId])
  @@map("contratos_motoristas")
}

model Disponibilidade {
  id          String      @id @default(cuid())
  motoristaId String
  data        DateTime    @db.Date
  ciclo       CicloRota
  disponivel  Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  motorista   Motorista   @relation(fields: [motoristaId], references: [id])

  @@unique([motoristaId, data, ciclo])
  @@index([motoristaId, data])
  @@map("disponibilidades")
}

model HistoricoDisponibilidade {
  id               String      @id @default(cuid())
  motoristaId      String
  data             DateTime    @db.Date
  ciclo            CicloRota
  disponivelAntigo Boolean
  disponivelNovo   Boolean
  alteradoPor      String?
  motivoAlteracao  String?     @db.Text
  createdAt        DateTime    @default(now())
  
  motorista        Motorista   @relation(fields: [motoristaId], references: [id], onDelete: Cascade)

  @@index([createdAt])
  @@index([motoristaId, data])
  @@map("historico_disponibilidades")
}

model HistoricoStatusMotorista {
  id             String          @id @default(cuid())
  motoristaId    String
  statusAnterior StatusMotorista
  statusNovo     StatusMotorista
  motivo         String?         @db.Text
  alteradoPor    String
  createdAt      DateTime        @default(now())
  
  motorista      Motorista       @relation(fields: [motoristaId], references: [id], onDelete: Cascade)
  usuario        Usuario         @relation(fields: [alteradoPor], references: [id])

  @@index([alteradoPor])
  @@index([motoristaId, createdAt])
  @@map("historico_status_motoristas")
}

model Alerta {
  id            String      @id @default(cuid())
  tipo          String      @db.VarChar(50)
  motoristaId   String?
  titulo        String      @db.VarChar(100)
  descricao     String      @db.Text
  severidade    String      @db.VarChar(20)
  resolvido     Boolean     @default(false)
  dataResolucao DateTime?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  motorista     Motorista?  @relation(fields: [motoristaId], references: [id])

  @@index([motoristaId, resolvido])
  @@index([tipo, resolvido])
  @@map("alertas")
}

model Faturamento {
  id                    String      @id @default(cuid())
  motoristaId           String
  quinzena              Int
  mes                   Int
  ano                   Int
  valorRotas            Decimal     @default(0.00) @db.Decimal(10, 2)
  valorBonus            Decimal     @default(0.00) @db.Decimal(10, 2)
  valorAjudaCombustivel Decimal     @default(0.00) @db.Decimal(10, 2)
  valorCancelamentos    Decimal     @default(0.00) @db.Decimal(10, 2)
  valorTotal            Decimal     @default(0.00) @db.Decimal(10, 2)
  pago                  Boolean     @default(false)
  dataPagamento         DateTime?
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  
  motorista             Motorista   @relation(fields: [motoristaId], references: [id])

  @@unique([motoristaId, quinzena, mes, ano])
  @@index([motoristaId])
  @@map("faturamentos")
}

model Local {
  id        String   @id @default(cuid())
  codigo    String   @unique @db.VarChar(10)
  nome      String   @db.VarChar(100)
  endereco  String   @db.Text
  latitude  Decimal? @db.Decimal(10, 8)
  longitude Decimal? @db.Decimal(11, 8)
  cidade    String   @db.VarChar(50)
  bairro    String?  @db.VarChar(30)
  uf        String   @db.VarChar(2)
  cep       String?  @db.VarChar(8)
  ativo     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  rotas     Rota[]

  @@map("locais")
}

model Rota {
  id                    String         @id @default(cuid())
  dataRota              DateTime       @db.Date
  horaInicio            DateTime       @db.Time(0)
  horaFim               DateTime?      @db.Time(0)
  tipoVeiculo           TipoVeiculo
  tipoRota              TipoRota       @default(ENTREGA)
  cicloRota             CicloRota      @default(CICLO_1)
  tamanhoHoras          Decimal        @db.Decimal(4, 2)
  veiculoTransportadora Boolean        @default(false)
  valorHora             Decimal        @db.Decimal(10, 2)
  bonusPorHora          Decimal        @default(0.00) @db.Decimal(10, 2)
  bonusFixo             Decimal        @default(0.00) @db.Decimal(10, 2)
  valorProjetado        Decimal        @db.Decimal(10, 2)
  kmProjetado           Int?           @default(50)
  tabelaPrecosId        String?
  valorHoraSnapshot     Decimal?       @db.Decimal(10, 2)
  valorKmSnapshot       Decimal?       @db.Decimal(10, 2)
  valorCancelSnapshot   Decimal?       @db.Decimal(10, 2)
  bonusWeekendSnapshot  Decimal?       @db.Decimal(10, 2)
  latitudeOrigem        Decimal?       @db.Decimal(10, 8)
  longitudeOrigem       Decimal?       @db.Decimal(11, 8)
  codigoRota            String?        @unique
  qtdePacotes           Int?
  qtdeLocais            Int?
  qtdeParadas           Int?
  horaInicioReal        DateTime?
  horaFimReal           DateTime?
  kmReal                Decimal?       @db.Decimal(10, 2)
  valorKm               Decimal        @default(0.64) @db.Decimal(10, 2)
  valorBonusKm          Decimal?       @db.Decimal(10, 2)
  valorTotalRota        Decimal        @db.Decimal(10, 2)
  dataValidacao         DateTime?
  validadoPor           String?
  status                StatusRota     @default(DISPONIVEL)
  localId               String
  motivoCancelamento    String?        @db.Text
  dataCancelamento      DateTime?
  valorCancelamento     Decimal?       @db.Decimal(10, 2)
  motoristaId           String?
  criadoPor             String
  statusTracking        StatusTracking @default(AGUARDANDO)
  timestampACaminho     DateTime?
  timestampNoLocal      DateTime?
  timestampRotaIniciada DateTime?
  timestampRotaConcluida DateTime?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt

  local                 Local          @relation(fields: [localId], references: [id])
  motorista             Motorista?     @relation(fields: [motoristaId], references: [id])
  tabelaPrecos          TabelaPreco?   @relation(fields: [tabelaPrecosId], references: [id])
  ofertas               OfertaRota[]
  historicosTracking    HistoricoTrackingRota[]
  metricaEntrega        MetricaEntrega?

  @@index([codigoRota])
  @@index([dataRota, status])
  @@index([localId])
  @@index([motoristaId])
  @@index([status])
  @@index([tabelaPrecosId])
  @@index([tipoVeiculo])
  @@map("rotas")
}

model OfertaRota {
  id                  String        @id @default(cuid())
  rotaId              String
  motoristaId         String
  status              StatusOferta  @default(PENDENTE)
  dataEnvio           DateTime      @default(now())
  dataVisualizacao    DateTime?
  dataResposta        DateTime?
  motivoRecusa        String?       @db.Text
  ipResposta          String?       @db.VarChar(45)
  dispositivoResposta String?       @db.VarChar(100)
  latitudeResposta    Decimal?      @db.Decimal(10, 8)
  longitudeResposta   Decimal?      @db.Decimal(11, 8)
  adicionouAgenda     Boolean       @default(false)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt

  motorista           Motorista     @relation(fields: [motoristaId], references: [id])
  rota                Rota          @relation(fields: [rotaId], references: [id])

  @@index([motoristaId, status])
  @@index([rotaId])
  @@map("ofertas_rotas")
}

model HistoricoTrackingRota {
  id            String         @id @default(cuid())
  rotaId        String
  motoristaId   String
  status        StatusTracking
  latitude      Decimal?       @db.Decimal(10, 8)
  longitude     Decimal?       @db.Decimal(11, 8)
  dispositivo   String?        @db.VarChar(255)
  ip            String?        @db.VarChar(45)
  observacao    String?        @db.Text
  createdAt     DateTime       @default(now())

  rota          Rota           @relation(fields: [rotaId], references: [id])
  motorista     Motorista      @relation(fields: [motoristaId], references: [id])

  @@index([rotaId, status])
  @@index([motoristaId])
  @@map("historicos_tracking_rotas")
}

model TabelaPreco {
  id                   String              @id @default(cuid())
  tipoVeiculo          TipoVeiculo?
  propriedadeVeiculo   PropriedadeVeiculo?
  tipoServico          TipoServico?
  propriedade          TipoPropriedade?
  versao               Int                 @default(1)
  estacao              String              @default("DBS5") @db.VarChar(10)
  valorHora            Decimal             @db.Decimal(10, 2)
  valorCancelamento    Decimal             @db.Decimal(10, 2)
  valorKm              Decimal             @db.Decimal(10, 2)
  bonusWeekend         Decimal             @default(0.00) @db.Decimal(10, 2)
  valorHoraDSP         Decimal?            @db.Decimal(10, 2)
  valorCancelamentoDSP Decimal?            @db.Decimal(10, 2)
  bonusWeekendDSP      Decimal?            @db.Decimal(10, 2)
  valorPorPacote       Decimal?            @db.Decimal(10, 2)
  dataInicioVigencia   DateTime
  dataFimVigencia      DateTime?
  ativo                Boolean             @default(true)
  criadoPor            String?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  
  rotas                Rota[]

  @@index([estacao, ativo, dataInicioVigencia])
  @@index([tipoServico, propriedade, ativo])
  @@index([tipoVeiculo, propriedadeVeiculo, ativo])
  @@map("tabelas_precos")
}

model AuditLog {
  id          String   @id @default(cuid())
  usuarioId   String?
  acao        String   @db.VarChar(100)
  entidade    String   @db.VarChar(50)
  entidadeId  String?
  descricao   String?  @db.Text
  ip          String   @db.VarChar(45)
  dispositivo String   @db.VarChar(500)
  latitude    Decimal? @db.Decimal(10, 8)
  longitude   Decimal? @db.Decimal(11, 8)
  createdAt   DateTime @default(now())

  usuario     Usuario?  @relation(fields: [usuarioId], references: [id])

  @@index([entidade, entidadeId])
  @@index([usuarioId, createdAt])
  @@map("audit_logs")
}

model MetricaEntrega {
  id                  String    @id @default(cuid())
  rotaId              String
  motoristaId         String
  data                DateTime  @db.Date
  totalPacotes        Int
  pacotesEntregues    Int
  pacotesRetornados   Int
  pacotesPNOV         Int
  pacotesDNR          Int
  taxaDRC             Decimal   @db.Decimal(5, 2)
  horarioCarregamento DateTime  @db.Time(0)
  horarioChegada      DateTime?
  atrasouCarregamento Boolean   @default(false)
  minutosAtraso       Int?
  satisfacaoMotorista String?   @db.VarChar(30)
  feedbackMotorista   String?   @db.Text
  horaInicioRota      DateTime?
  horaFimRota         DateTime?
  duracaoEmMinutos    Int?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  rota                Rota      @relation(fields: [rotaId], references: [id])
  motorista           Motorista @relation(fields: [motoristaId], references: [id])

  @@unique([rotaId])
  @@index([data])
  @@index([motoristaId])
  @@map("metricas_entregas")
}
